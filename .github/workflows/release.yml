name: Create Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating releases

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: 'Set up Python'
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: Install dependencies and build
        run: |
          uv sync
          uv build

      - name: Get version from __init__.py
        id: get_version
        run: |
          version=$(uv run python -c 'import protorec; print(protorec.__version__)' || echo "")
          if [[ -z "$version" ]]; then
            echo "❌ Version extraction failed!" >&2
            exit 1
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sync:
    runs-on: ubuntu-latest
    needs: build-and-release # Ensures sync happens only after release is created
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git credentials
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure develop branch exists
        run: |
          if ! git ls-remote --exit-code --heads origin develop; then
            echo "⚠️ develop branch does not exist. Skipping merge."
            exit 0
          fi

      - name: Merge Main to Develop
        run: |
          git fetch origin
          git checkout develop
          git pull origin develop
          git merge --no-ff origin/main -m "Auto-merge main into develop [bot]"
          git push origin develop
